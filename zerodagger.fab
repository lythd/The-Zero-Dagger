vars /game_vars
    CCC/levels level_ptr
    UU px = 128 // Player x and y are each 9 bits
    UU py = 128
    U sx = 128 // Scroll offset from player, technically negative, this is not the scroll value itself just the offset!
    U sy = 128
    U nmc = %10000000 // either %00 %01 %10 %11, name table coordinates, $80 means unitialized
    
    U[64] text = "0000000000000000000000000000000000000000000000000000000000000000" // I am using 0 as a null terminating character here
    U text_counter = 0
    U text_index = 0

fn vblank_update()
    // Update OAM and poll the pads
    ppu_upload_oam_poll_pads(0)
    
    // Calculate scroll values and nametable coords based on the player coordinates and the scroll offset
    UU scrollx = (px - UU(sx)) 
    U uscrollx = U(scrollx & $00ff) // the x scroll fits perfectly into 256 so modulo can be done with &
    U pnmc = U((scrollx & $0100) >> 8) // %000000yx making a new name table coordinate based on the scroll
    
    UU scrolly = (py - UU(sy)) 
    if (scrolly & $8000) != 0
        scrolly += 480
    if scrolly >= $f0 // y is not so lucky, needs to be modulo 240
        scrolly -= $f0
        pnmc |= %10
    U uscrolly = U(scrolly)
    
    if nmc != pnmc 
        nmc = pnmc
        {PPUCTRL}(PPUCTRL_NMI_ON | nmc) // update active nametable
    ppu_reset_scroll(uscrollx, uscrolly) // set scroll within nametable to sx, sy

nmi main_nmi()
    vblank_update()

mode main()
: nmi main_nmi
    // Disable nmi
    {PPUCTRL}(nmc)
    
    // Turn off rendering
    {PPUMASK}(PPUMASK_NO_CLIP)
    
    // Set the palette
    palette = example_palette
    ppu_upload_palette()
    
    // Only load tilesheets the first time since it shouldn't change and takes a while
    if nmc == $80
        nmc = 0
        upload_tilesheets()

    // Setup and load the level
    level_ptr = @level1
    load_level()
    
    // Turn on rendering
    {PPUMASK}(PPUMASK_ON | PPUMASK_NO_CLIP)
    
    // Tell the NES to trigger NMI once per frame
    {PPUCTRL}(PPUCTRL_NMI_ON | nmc)
    
    // Wait forever, one frame at a time
    while true
        update_pads()
        move_player() 
        update_sprites()
        if pads[0].pressed & BUTTON_A
            // Set the dialogue text and go to dialogue
            text[0] = 'H'
            text[1] = 'E'
            text[2] = 'Y'
            text[3] = '0'
            goto mode dialogue()
            : preserves /game_vars
        else if pads[0].pressed & BUTTON_START
            // Set the dialogue text and go to dialogue
            text[0] = 'M'
            text[1] = 'E'
            text[2] = 'N'
            text[3] = 'U'
            text[4] = '0'
            goto mode dialogue()
            : preserves /game_vars
        nmi

